@page
@model GestionPedidosAV.Pages.Users.DetailsModel
@{
    ViewData["Title"] = $"Detalles de {Model.User.FullName}";
}

<!-- Header Section -->
<div class="mb-8">
    <div class="flex items-center justify-between">
        <div class="flex items-center">
            <a href="/Users" class="text-neutral-600 hover:text-neutral-900 mr-4 transition-colors duration-200">
                <i class="fas fa-arrow-left text-lg"></i>
            </a>
            <div>
                <h1 class="text-3xl font-bold text-neutral-900">
                    Detalles del Usuario
                </h1>
                <p class="text-neutral-600 mt-1">Información completa y actividad del usuario</p>
            </div>
        </div>
        
        <div class="flex space-x-3">
            <a href="/Users/Edit/@Model.User.Id" 
               class="bg-yellow-500 hover:bg-yellow-600 text-white px-4 py-2 rounded-lg font-medium transition-all duration-200 transform hover:scale-105">
                <i class="fas fa-edit mr-2"></i>Editar
            </a>
            
            <button onclick="confirmDelete('@Model.User.Id', '@Model.User.FullName')" 
                    class="bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-lg font-medium transition-all duration-200 transform hover:scale-105">
                <i class="fas fa-trash mr-2"></i>Eliminar
            </button>
        </div>
    </div>
</div>

<div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
    <!-- User Profile Card -->
    <div class="lg:col-span-1">
        <div class="bg-white rounded-xl shadow-sm border border-neutral-200">
            <!-- Profile Header -->
            <div class="p-6 border-b border-neutral-200 bg-gradient-to-r from-primary-500 to-accent-purple rounded-t-xl">
                <div class="text-center">
                    <div class="bg-white bg-opacity-20 p-6 rounded-full w-24 h-24 mx-auto mb-4 flex items-center justify-center">
                        <i class="fas fa-user text-white text-3xl"></i>
                    </div>
                    <h2 class="text-xl font-bold text-white">@Model.User.FullName</h2>
                    <p class="text-blue-100 mt-1">@Model.User.Email</p>
                    
                    <!-- Role Badge -->
                    <div class="mt-4">
                        @switch (Model.User.Role)
                        {
                            case Domain.Enums.UserRole.Admin:
                                <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-white bg-opacity-20 text-white">
                                    <i class="fas fa-user-shield mr-2"></i>Administrador
                                </span>
                                break;
                            case Domain.Enums.UserRole.Empleado:
                                <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-white bg-opacity-20 text-white">
                                    <i class="fas fa-user-tie mr-2"></i>Empleado
                                </span>
                                break;
                            case Domain.Enums.UserRole.Cliente:
                                <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-white bg-opacity-20 text-white">
                                    <i class="fas fa-user mr-2"></i>Cliente
                                </span>
                                break;
                        }
                    </div>
                </div>
            </div>
            
            <!-- Profile Details -->
            <div class="p-6 space-y-4">
                <div class="flex items-center">
                    <div class="bg-primary-100 p-2 rounded-lg mr-3">
                        <i class="fas fa-envelope text-primary-600"></i>
                    </div>
                    <div>
                        <p class="text-sm font-medium text-neutral-900">Email</p>
                        <p class="text-sm text-neutral-600">@Model.User.Email</p>
                    </div>
                </div>
                
                @if (!string.IsNullOrEmpty(Model.User.PhoneNumber))
                {
                    <div class="flex items-center">
                        <div class="bg-green-100 p-2 rounded-lg mr-3">
                            <i class="fas fa-phone text-green-600"></i>
                        </div>
                        <div>
                            <p class="text-sm font-medium text-neutral-900">Teléfono</p>
                            <p class="text-sm text-neutral-600">@Model.User.PhoneNumber</p>
                        </div>
                    </div>
                }
                
                @if (!string.IsNullOrEmpty(Model.User.Address))
                {
                    <div class="flex items-start">
                        <div class="bg-blue-100 p-2 rounded-lg mr-3 mt-1">
                            <i class="fas fa-map-marker-alt text-blue-600"></i>
                        </div>
                        <div>
                            <p class="text-sm font-medium text-neutral-900">Dirección</p>
                            <p class="text-sm text-neutral-600">@Model.User.Address</p>
                        </div>
                    </div>
                }
                
                <div class="flex items-center">
                    <div class="bg-purple-100 p-2 rounded-lg mr-3">
                        <i class="fas fa-calendar text-purple-600"></i>
                    </div>
                    <div>
                        <p class="text-sm font-medium text-neutral-900">Fecha de Registro</p>
                        <p class="text-sm text-neutral-600">@Model.User.CreatedAt.ToString("dd 'de' MMMM 'de' yyyy", new System.Globalization.CultureInfo("es-ES"))</p>
                    </div>
                </div>
                
                <div class="flex items-center">
                    <div class="bg-@(Model.User.IsActive ? "green" : "red")-100 p-2 rounded-lg mr-3">
                        <i class="fas fa-@(Model.User.IsActive ? "check-circle" : "times-circle") text-@(Model.User.IsActive ? "green" : "red")-600"></i>
                    </div>
                    <div>
                        <p class="text-sm font-medium text-neutral-900">Estado</p>
                        <p class="text-sm text-@(Model.User.IsActive ? "green" : "red")-600 font-medium">
                            @(Model.User.IsActive ? "Activo" : "Inactivo")
                        </p>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- User Statistics -->
        <div class="bg-white rounded-xl shadow-sm border border-neutral-200 mt-6">
            <div class="p-6 border-b border-neutral-200">
                <h3 class="text-lg font-semibold text-neutral-900 flex items-center">
                    <i class="fas fa-chart-bar mr-3 text-primary-600"></i>
                    Estadísticas
                </h3>
            </div>
            
            <div class="p-6 space-y-4">
                <div class="flex justify-between items-center">
                    <span class="text-neutral-600">Total de Pedidos</span>
                    <span class="text-2xl font-bold text-primary-600">@Model.TotalOrders</span>
                </div>
                
                <div class="flex justify-between items-center">
                    <span class="text-neutral-600">Total Gastado</span>
                    <span class="text-2xl font-bold text-accent-green">${@Model.TotalSpent.ToString("N2")}</span>
                </div>
                
                @if (Model.TotalOrders > 0)
                {
                    <div class="flex justify-between items-center">
                        <span class="text-neutral-600">Promedio por Pedido</span>
                        <span class="text-lg font-semibold text-neutral-900">${@((Model.TotalSpent / Model.TotalOrders).ToString("N2"))}</span>
                    </div>
                }
            </div>
        </div>
    </div>
    
    <!-- Orders Section -->
    <div class="lg:col-span-2">
        <div class="bg-white rounded-xl shadow-sm border border-neutral-200">
            <div class="p-6 border-b border-neutral-200">
                <div class="flex items-center justify-between">
                    <h3 class="text-lg font-semibold text-neutral-900 flex items-center">
                        <i class="fas fa-clipboard-list mr-3 text-primary-600"></i>
                        Historial de Pedidos
                    </h3>
                    @if (Model.UserOrders.Any())
                    {
                        <a href="/Orders?userId=@Model.User.Id" 
                           class="text-primary-600 hover:text-primary-700 text-sm font-medium">
                            Ver todos los pedidos
                        </a>
                    }
                </div>
                @if (Model.UserOrders.Any())
                {
                    <p class="text-neutral-600 text-sm mt-1">Últimos @Model.UserOrders.Count pedidos realizados</p>
                }
            </div>
            
            @if (Model.UserOrders.Any())
            {
                <div class="divide-y divide-neutral-200">
                    @foreach (var order in Model.UserOrders)
                    {
                        <div class="p-6 hover:bg-neutral-50 transition-colors duration-150">
                            <div class="flex items-center justify-between mb-4">
                                <div>
                                    <h4 class="text-lg font-semibold text-neutral-900">@order.OrderNumber</h4>
                                    <p class="text-neutral-600 text-sm">@order.OrderDate.ToString("dd/MM/yyyy HH:mm")</p>
                                </div>
                                
                                <div class="text-right">
                                    <p class="text-2xl font-bold text-neutral-900">${@order.Total.ToString("N2")}</p>
                                    @switch (order.Status)
                                    {
                                        case Domain.Enums.OrderStatus.Pendiente:
                                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800">
                                                <span class="w-1.5 h-1.5 bg-yellow-500 rounded-full mr-1.5"></span>
                                                Pendiente
                                            </span>
                                            break;
                                        case Domain.Enums.OrderStatus.Procesado:
                                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                                                <span class="w-1.5 h-1.5 bg-blue-500 rounded-full mr-1.5"></span>
                                                Procesado
                                            </span>
                                            break;
                                        case Domain.Enums.OrderStatus.Enviado:
                                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800">
                                                <span class="w-1.5 h-1.5 bg-purple-500 rounded-full mr-1.5"></span>
                                                Enviado
                                            </span>
                                            break;
                                        case Domain.Enums.OrderStatus.Entregado:
                                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                                                <span class="w-1.5 h-1.5 bg-green-500 rounded-full mr-1.5"></span>
                                                Entregado
                                            </span>
                                            break;
                                        case Domain.Enums.OrderStatus.Cancelado:
                                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
                                                <span class="w-1.5 h-1.5 bg-red-500 rounded-full mr-1.5"></span>
                                                Cancelado
                                            </span>
                                            break;
                                    }
                                </div>
                            </div>
                            
                            @if (order.OrderItems.Any())
                            {
                                <div class="bg-neutral-50 rounded-lg p-4">
                                    <h5 class="text-sm font-medium text-neutral-900 mb-2">Productos (@order.OrderItems.Count)</h5>
                                    <div class="space-y-2">
                                        @foreach (var item in order.OrderItems.Take(3))
                                        {
                                            <div class="flex justify-between text-sm">
                                                <span class="text-neutral-700">@item.Product?.Name</span>
                                                <span class="text-neutral-900">@item.Quantity x $@item.UnitPrice.ToString("N2")</span>
                                            </div>
                                        }
                                        @if (order.OrderItems.Count > 3)
                                        {
                                            <div class="text-xs text-neutral-500 pt-1">
                                                Y @(order.OrderItems.Count - 3) producto@(order.OrderItems.Count - 3 != 1 ? "s" : "") más...
                                            </div>
                                        }
                                    </div>
                                </div>
                            }
                            
                            <div class="flex justify-end mt-4">
                                <a href="/Orders/Details/@order.Id" 
                                   class="bg-primary-100 hover:bg-primary-200 text-primary-700 hover:text-primary-900 px-4 py-2 rounded-lg text-sm font-medium transition-all duration-200 transform hover:scale-105">
                                    <i class="fas fa-eye mr-2"></i>Ver Detalles
                                </a>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="p-12 text-center">
                    <div class="bg-neutral-100 rounded-full p-6 w-24 h-24 mx-auto mb-4 flex items-center justify-center">
                        <i class="fas fa-clipboard-list text-neutral-400 text-2xl"></i>
                    </div>
                    <h4 class="text-lg font-medium text-neutral-900 mb-2">No hay pedidos</h4>
                    <p class="text-neutral-600 mb-4">Este usuario aún no ha realizado ningún pedido</p>
                    <a href="/Orders/Create?userId=@Model.User.Id" 
                       class="bg-primary-600 hover:bg-primary-700 text-white px-6 py-2 rounded-lg text-sm font-medium transition-all duration-200 transform hover:scale-105">
                        <i class="fas fa-plus mr-2"></i>Crear primer pedido
                    </a>
                </div>
            }
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div id="deleteModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
    <div class="bg-white rounded-xl p-6 max-w-md mx-4 transform transition-all duration-300 scale-95" id="modalContent">
        <div class="flex items-center mb-4">
            <div class="bg-red-100 p-3 rounded-full mr-4">
                <i class="fas fa-exclamation-triangle text-red-600 text-xl"></i>
            </div>
            <div>
                <h3 class="text-lg font-semibold text-neutral-900">Confirmar eliminación</h3>
                <p class="text-neutral-600">Esta acción no se puede deshacer</p>
            </div>
        </div>
        
        <p class="text-neutral-700 mb-6">
            ¿Estás seguro de que deseas eliminar al usuario <strong id="userNameToDelete"></strong>?
        </p>
        
        <div class="flex justify-end space-x-3">
            <button onclick="closeDeleteModal()" 
                    class="bg-neutral-100 hover:bg-neutral-200 text-neutral-700 hover:text-neutral-900 px-4 py-2 rounded-lg font-medium transition-all duration-200">
                Cancelar
            </button>
            
            <form method="post" id="deleteForm" class="inline">
                <input type="hidden" name="id" id="userIdToDelete">
                <button type="submit" 
                        class="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg font-medium transition-all duration-200 transform hover:scale-105">
                    <i class="fas fa-trash mr-2"></i>Eliminar
                </button>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function confirmDelete(userId, userName) {
            document.getElementById('userIdToDelete').value = userId;
            document.getElementById('userNameToDelete').textContent = userName;
            document.getElementById('deleteForm').action = '/Users?handler=Delete';
            
            const modal = document.getElementById('deleteModal');
            const modalContent = document.getElementById('modalContent');
            
            modal.classList.remove('hidden');
            modal.classList.add('flex');
            
            setTimeout(() => {
                modalContent.classList.remove('scale-95');
                modalContent.classList.add('scale-100');
            }, 10);
        }
        
        function closeDeleteModal() {
            const modal = document.getElementById('deleteModal');
            const modalContent = document.getElementById('modalContent');
            
            modalContent.classList.remove('scale-100');
            modalContent.classList.add('scale-95');
            
            setTimeout(() => {
                modal.classList.add('hidden');
                modal.classList.remove('flex');
            }, 200);
        }
        
        // Close modal when clicking outside
        document.getElementById('deleteModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeDeleteModal();
            }
        });
        
        // Close modal with Escape key
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closeDeleteModal();
            }
        });
    </script>
}